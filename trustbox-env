# TrustBox Yocto build environment deployment
# Author: Lavnikevich Dmitry <dmitry.lavnikevich@edality.by>


BSP_DIR="$(pwd)"
THIS_ENV_FILE="trustbox-env"
OE_ENV_PATH="$BSP_DIR/sources/poky/oe-init-build-env"
BUILD_DIR="$BSP_DIR/build"
SOURCES_DIR="$BSP_DIR/sources"

LOCAL_CONF_PATH="$BUILD_DIR/conf/local.conf"
LOCAL_CONF_LIST="\
  STOPTASKS,\${TMPDIR},1G,100K \
  STOPTASKS,\${DL_DIR},1G,100K \
  STOPTASKS,\${SSTATE_DIR},1G,100K \
  STOPTASKS,/tmp,100M,100K \
  ABORT,\${TMPDIR},100M,1K \
  ABORT,\${DL_DIR},100M,1K \
  ABORT,\${SSTATE_DIR},100M,1K \
  ABORT,/tmp,10M,1K \
"

BBLAYERS_CONF_PATH="$BUILD_DIR/conf/bblayers.conf"
BBLAYERS_LIST="\
  poky/meta \
  poky/meta-poky \
  poky/meta-yocto-bsp \
  \
  meta-openembedded/meta-oe \
  meta-openembedded/meta-networking \
  meta-openembedded/meta-python \
  meta-openembedded/meta-filesystems \
  \
  meta-cloud-services \
  \
  meta-freescale \
  \
  meta-mender/meta-mender-core \
  \
  meta-scalys \
"


#### AUX #######################################################################

err() {
    echo "Error:" $@
    return 1
}
warn() {
    echo "Warning:" $@
}
info() {
    echo $@
}


#### Functions #################################################################

local_conf_generate() {
    cat <<EOF > "$LOCAL_CONF_PATH"
MACHINE = "trustbox"
DISTRO ?= "poky"
PACKAGE_CLASSES ?= "package_ipk"
EXTRA_IMAGE_FEATURES ?= "debug-tweaks"
USER_CLASSES ?= "buildstats image-mklibs image-prelink"
PATCHRESOLVE = "noop"
EOF
    echo "BB_DISKMON_DIRS = \"\\" >> "$LOCAL_CONF_PATH"

    for dir in $LOCAL_CONF_LIST; do
        echo "  $dir \\" >> "$LOCAL_CONF_PATH"
    done
    echo "\"" >> "$LOCAL_CONF_PATH"

    echo "CONF_VERSION = \"1\"" >> "$LOCAL_CONF_PATH"

}

bblayers_conf_generate() {
    cat <<EOF > "$BBLAYERS_CONF_PATH"
POKY_BBLAYERS_CONF_VERSION = "2"

BBPATH = "\${TOPDIR}"
BBFILES ?= ""

BBLAYERS ?= "\\
EOF

    for layer in $BBLAYERS_LIST; do
        echo "  $SOURCES_DIR/$layer \\" >> "$BBLAYERS_CONF_PATH"
    done
    echo "\"" >> "$BBLAYERS_CONF_PATH"
}


#### Main ######################################################################


MYSHELL=$(ps -hp $$ | awk '{ print $5 }' | sed 's!.*/!!')

[ "$MYSHELL" == "bash" ] || err "this environment can be sourced from bash only" || return
[ -f "$THIS_ENV_FILE" ] || err "this environment should be sourced from the BSP directory" || return
[ -f "$OE_ENV_PATH" ] || err "sources are not pulled" || return

unset GEN_CONF
[ -f "$BBLAYERS_CONF_PATH" -a -f "$LOCAL_CONF_PATH" ] || GEN_CONF=y

source "$OE_ENV_PATH"

if [ -n "$GEN_CONF" ]; then
    local_conf_generate
    bblayers_conf_generate
fi
